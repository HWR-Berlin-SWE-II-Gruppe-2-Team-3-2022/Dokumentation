# This is a basic workflow to help you get started with Actions

name: Create Release Draft

# Controls when the action will run. 
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  # This workflow contains a single job called "build"
  create_release_draft:
    # The type of runner that the job will run on
    #runs-on: self-hosted
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
# Latex compilation
      - name: Latex compilation - Software Requirements Specification
        # You may pin to the exact commit or the version.
        # uses: dante-ev/latex-action@49cf7cb5f79e7b2006dbdffea85e02bec0b6244b
        uses: dante-ev/latex-action@2021-A
        with:
          # The root LaTeX file to be compiled
          root_file: "SoftwareRequirementsSpecification.tex"
          # LaTeX engine to be used
          compiler: pdflatex
          # Extra arguments to be passed to the latex compiler
          args:  -synctex=1 -interaction=nonstopmode -shell-escape
          working_directory: "./SoftwareRequirementsSpecification/"
      
      - name: Latex compilation - Vision and Scope
        # You may pin to the exact commit or the version.
        # uses: dante-ev/latex-action@49cf7cb5f79e7b2006dbdffea85e02bec0b6244b
        uses: dante-ev/latex-action@2021-A
        with:
          # The root LaTeX file to be compiled
          root_file: "VisionAndScope.tex"
          # LaTeX engine to be used
          compiler: pdflatex
          # Extra arguments to be passed to the latex compiler
          args:  -synctex=1 -interaction=nonstopmode -shell-escape
          working_directory: "./VisionAndScope/"
          
      - name: Latex compilation - Stakeholder Analyse
        # You may pin to the exact commit or the version.
        # uses: dante-ev/latex-action@49cf7cb5f79e7b2006dbdffea85e02bec0b6244b
        uses: dante-ev/latex-action@2021-A
        with:
          # The root LaTeX file to be compiled
          root_file: "SHA_IT20_KursB_Team3.tex"
          # LaTeX engine to be used
          compiler: pdflatex
          # Extra arguments to be passed to the latex compiler
          args:  -synctex=1 -interaction=nonstopmode -shell-escape
          working_directory: "./StakeholderAnalyse/"


      - name: Latex compilation - Anwendungsfalldiagramm
        # You may pin to the exact commit or the version.
        # uses: dante-ev/latex-action@49cf7cb5f79e7b2006dbdffea85e02bec0b6244b
        uses: dante-ev/latex-action@2021-A
        with:
          # The root LaTeX file to be compiled
          root_file: "Anwendungsfalldiagramm.tex"
          # LaTeX engine to be used
          compiler: pdflatex
          # Extra arguments to be passed to the latex compiler
          args:  -synctex=1 -interaction=nonstopmode -shell-escape
          working_directory: "./UML/Anwendungsfalldiagramm/"
          
      - name: Latex compilation - Aktivitaetsdiagramm
        # You may pin to the exact commit or the version.
        # uses: dante-ev/latex-action@49cf7cb5f79e7b2006dbdffea85e02bec0b6244b
        uses: dante-ev/latex-action@2021-A
        with:
          # The root LaTeX file to be compiled
          root_file: "Aktivitaetsdiagramm.tex"
          # LaTeX engine to be used
          compiler: pdflatex
          # Extra arguments to be passed to the latex compiler
          args:  -synctex=1 -interaction=nonstopmode -shell-escape
          working_directory: "./UML/Aktivitaetsdiagramm/"

      - name: Latex compilation - Paper
        # You may pin to the exact commit or the version.
        # uses: dante-ev/latex-action@49cf7cb5f79e7b2006dbdffea85e02bec0b6244b
        uses: dante-ev/latex-action@2021-A
        with:
          # The root LaTeX file to be compiled
          root_file: "Paper_IT20B_Team3.tex"
          # LaTeX engine to be used
          compiler: pdflatex
          # Extra arguments to be passed to the latex compiler
          args:  -synctex=1 -interaction=nonstopmode -shell-escape
          working_directory: "./Paper/"

      - name: Create Zip - Paper
        # You may pin to the exact commit or the version.
        # uses: vimtor/action-zip@5f1c4aa587ea41db1110df6a99981dbe19cee310
        uses: vimtor/action-zip@v1
        with:
          # Files or directories to zip
          files: |
           Paper/Paper_IT20B_Team3.pdf
          # Name of output zip file
          dest: Paper_IT20B_Team3.zip
          # Whether to add subdirectories to simply zip all files to the root
          recursive: false

      - name: Create Zip - Stakeholder Analyse
        # You may pin to the exact commit or the version.
        # uses: vimtor/action-zip@5f1c4aa587ea41db1110df6a99981dbe19cee310
        uses: vimtor/action-zip@v1
        with:
          # Files or directories to zip
          files: |
           StakeholderAnalyse/SHA_IT20_KursB_Team3.pdf
          # Name of output zip file
          dest: SHA_IT20_KursB_Team3.zip
          # Whether to add subdirectories to simply zip all files to the root
          recursive: false
          
      - name: Create Zip - Zwischenpr채sentation
        # You may pin to the exact commit or the version.
        # uses: vimtor/action-zip@5f1c4aa587ea41db1110df6a99981dbe19cee310
        uses: vimtor/action-zip@v1
        with:
          # Files or directories to zip
          files: |
           Zwischenpr채sentation/ZwP_IT20_KursB_Team8.pdf
          # Name of output zip file
          dest: ZwP_IT20_KursB_Team8.zip
          # Whether to add subdirectories to simply zip all files to the root
          recursive: false
          
          
      - name: Create UML folder and move pdfs
        run: |
          mkdir UML-Diagramme
          mv UML/Anwendungsfalldiagramm/Anwendungsfalldiagramm.pdf ./UML-Diagramme/Anwendungsfalldiagramm.pdf
          mv UML/Aktivitaetsdiagramm/Aktivitaetsdiagramm.pdf ./UML-Diagramme/Aktivitaetsdiagramm.pdf
          
      - name: Create Zip - UML-Diagramme
        # You may pin to the exact commit or the version.
        # uses: vimtor/action-zip@5f1c4aa587ea41db1110df6a99981dbe19cee310
        uses: vimtor/action-zip@v1
        with:
          # Files or directories to zip
          files: |
            UML-Diagramme
          # Name of output zip file
          dest: UML_IT20_KursB_Team3.zip
          # Whether to add subdirectories to simply zip all files to the root
          recursive: false
          
      - name: Create Zip - Vision And Scope
        # You may pin to the exact commit or the version.
        # uses: vimtor/action-zip@5f1c4aa587ea41db1110df6a99981dbe19cee310
        uses: vimtor/action-zip@v1
        with:
          # Files or directories to zip
          files: |
            VisionAndScope/VisionAndScope.pdf
          # Name of output zip file
          dest: VSD_IT20_KursB_Team3.zip
          # Whether to add subdirectories to simply zip all files to the root
          recursive: false

          
      - name: Create Zip - Software Requirements Specification
        # You may pin to the exact commit or the version.
        # uses: vimtor/action-zip@5f1c4aa587ea41db1110df6a99981dbe19cee310
        uses: vimtor/action-zip@v1
        with:
          # Files or directories to zip
          files: |
            SoftwareRequirementsSpecification/SoftwareRequirementsSpecification.pdf
          # Name of output zip file
          dest: SRS_IT20_KursB_Team3.zip
          # Whether to add subdirectories to simply zip all files to the root
          recursive: false  

      - name: Create Zip - Endpr채sentation
        # You may pin to the exact commit or the version.
        # uses: vimtor/action-zip@5f1c4aa587ea41db1110df6a99981dbe19cee310
        uses: vimtor/action-zip@v1
        with:
          # Files or directories to zip
          files: |
           Endpr채sentation
          # Name of output zip file
          dest: EndP_IT20_KursB_Team8.zip
          # Whether to add subdirectories to simply zip all files to the root
          recursive: false


      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'
        
      - name: Determine Version
        id:   gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7

      - name: Display GitVersion outputs
        run: |
          echo "Major: ${{ steps.gitversion.outputs.major }}"
          echo "Minor: ${{ steps.gitversion.outputs.minor }}"
          echo "Patch: ${{ steps.gitversion.outputs.patch }}"
          echo "PreReleaseTag: ${{ steps.gitversion.outputs.preReleaseTag }}"
          echo "PreReleaseTagWithDash: ${{ steps.gitversion.outputs.preReleaseTagWithDash }}"
          echo "PreReleaseLabel: ${{ steps.gitversion.outputs.preReleaseLabel }}"
          echo "PreReleaseNumber: ${{ steps.gitversion.outputs.preReleaseNumber }}"
          echo "WeightedPreReleaseNumber: ${{ steps.gitversion.outputs.weightedPreReleaseNumber }}"
          echo "BuildMetaData: ${{ steps.gitversion.outputs.buildMetaData }}"
          echo "BuildMetaDataPadded: ${{ steps.gitversion.outputs.buildMetaDataPadded }}"
          echo "FullBuildMetaData: ${{ steps.gitversion.outputs.fullBuildMetaData }}"
          echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
          echo "LegacySemVer: ${{ steps.gitversion.outputs.legacySemVer }}"
          echo "LegacySemVerPadded: ${{ steps.gitversion.outputs.legacySemVerPadded }}"
          echo "AssemblySemVer: ${{ steps.gitversion.outputs.assemblySemVer }}"
          echo "AssemblySemFileVer: ${{ steps.gitversion.outputs.assemblySemFileVer }}"
          echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
          echo "InformationalVersion: ${{ steps.gitversion.outputs.informationalVersion }}"
          echo "BranchName: ${{ steps.gitversion.outputs.branchName }}"
          echo "EscapedBranchName: ${{ steps.gitversion.outputs.escapedBranchName }}"
          echo "Sha: ${{ steps.gitversion.outputs.sha }}"
          echo "ShortSha: ${{ steps.gitversion.outputs.shortSha }}"
          echo "NuGetVersionV2: ${{ steps.gitversion.outputs.nuGetVersionV2 }}"
          echo "NuGetVersion: ${{ steps.gitversion.outputs.nuGetVersion }}"
          echo "NuGetPreReleaseTagV2: ${{ steps.gitversion.outputs.nuGetPreReleaseTagV2 }}"
          echo "NuGetPreReleaseTag: ${{ steps.gitversion.outputs.nuGetPreReleaseTag }}"
          echo "VersionSourceSha: ${{ steps.gitversion.outputs.versionSourceSha }}"
          echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.commitsSinceVersionSource }}"
          echo "CommitsSinceVersionSourcePadded: ${{ steps.gitversion.outputs.commitsSinceVersionSourcePadded }}"
          echo "UncommittedChanges: ${{ steps.gitversion.outputs.uncommittedChanges }}"
          echo "CommitDate: ${{ steps.gitversion.outputs.commitDate }}"
        
      - uses: gittools/actions/gitreleasemanager/setup@v0.9.2
        name: Install GitReleaseManager
        with:
          versionSpec: '0.10.x'
        
      - uses: gittools/actions/gitreleasemanager/create@v0.9.10
        name: Create release with GitReleaseManager
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          milestone: '${{ steps.gitversion.outputs.majorMinorPatch }}'
          name: 'v${{ steps.gitversion.outputs.semVer }}'
          owner: 'HWR-Berlin-SWE-I-Gruppe-2-Team-3-2021'
          repository: 'Dokumentation'
          assets: |
            SHA_IT20_KursB_Team3.zip
            ZwP_IT20_KursB_Team8.zip
            Paper_IT20B_Team3.zip
            UML_IT20_KursB_Team3.zip
            VSD_IT20_KursB_Team3.zip
            SRS_IT20_KursB_Team3.zip
            EndP_IT20_KursB_Team8.zip